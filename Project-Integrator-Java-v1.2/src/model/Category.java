package model;
// Generated 25/04/2019 00:40:20 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name="category"
    ,schema="gcsystem"
)
public class Category  implements java.io.Serializable {


     private int code;
     private String description;
     private Set<Additional> additionals = new HashSet<Additional>(0);
     private Set<Item> items = new HashSet<Item>(0);
     private Set<Filterhistory> filterhistories = new HashSet<Filterhistory>(0);

    public Category() {
    }

	
    public Category(int code) {
        this.code = code;
    }
    public Category(int code, String description, Set<Additional> additionals, Set<Item> items, Set<Filterhistory> filterhistories) {
       this.code = code;
       this.description = description;
       this.additionals = additionals;
       this.items = items;
       this.filterhistories = filterhistories;
    }
   
     @Id 

    
    @Column(name="code", nullable=false)
    public int getCode() {
        return this.code;
    }
    
    public void setCode(int code) {
        this.code = code;
    }

    
    @Column(name="description", length=40)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="category")
    public Set<Additional> getAdditionals() {
        return this.additionals;
    }
    
    public void setAdditionals(Set<Additional> additionals) {
        this.additionals = additionals;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="category")
    public Set<Item> getItems() {
        return this.items;
    }
    
    public void setItems(Set<Item> items) {
        this.items = items;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="category")
    public Set<Filterhistory> getFilterhistories() {
        return this.filterhistories;
    }
    
    public void setFilterhistories(Set<Filterhistory> filterhistories) {
        this.filterhistories = filterhistories;
    }




}


