package model;
// Generated 15/05/2019 21:27:16 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name="company"
    ,schema="gcsystem"
)
public class Company  implements java.io.Serializable {


     private int code;
     private String name;
     private String cnpj;
     private String address;
     private String numberaddress;
     private String complement;
     private String district;
     private String city;
     private String uf;
     private String zipcode;
     private Boolean available;
     private Set<Itemcompany> itemcompanies = new HashSet<Itemcompany>(0);
     private Set<Guestcheck> guestchecks = new HashSet<Guestcheck>(0);
     private Set<Productcompany> productcompanies = new HashSet<Productcompany>(0);
     private Set<Itemlog> itemlogs = new HashSet<Itemlog>(0);
     private Set<Tablelist> tablelists = new HashSet<Tablelist>(0);
     private Set<Userlog> userlogs = new HashSet<Userlog>(0);
     private Set<Usercompany> usercompanies = new HashSet<Usercompany>(0);
     private Set<Request> requests = new HashSet<Request>(0);
     private Set<Additionalcompany> additionalcompanies = new HashSet<Additionalcompany>(0);

    public Company() {
    }

	
    public Company(int code) {
        this.code = code;
    }
    public Company(int code, String name, String cnpj, String address, String numberaddress, String complement, String district, String city, String uf, String zipcode, Boolean available, Set<Itemcompany> itemcompanies, Set<Guestcheck> guestchecks, Set<Productcompany> productcompanies, Set<Itemlog> itemlogs, Set<Tablelist> tablelists, Set<Userlog> userlogs, Set<Usercompany> usercompanies, Set<Request> requests, Set<Additionalcompany> additionalcompanies) {
       this.code = code;
       this.name = name;
       this.cnpj = cnpj;
       this.address = address;
       this.numberaddress = numberaddress;
       this.complement = complement;
       this.district = district;
       this.city = city;
       this.uf = uf;
       this.zipcode = zipcode;
       this.available = available;
       this.itemcompanies = itemcompanies;
       this.guestchecks = guestchecks;
       this.productcompanies = productcompanies;
       this.itemlogs = itemlogs;
       this.tablelists = tablelists;
       this.userlogs = userlogs;
       this.usercompanies = usercompanies;
       this.requests = requests;
       this.additionalcompanies = additionalcompanies;
    }
   
     @Id 

    
    @Column(name="code", unique=true, nullable=false)
    public int getCode() {
        return this.code;
    }
    
    public void setCode(int code) {
        this.code = code;
    }

    
    @Column(name="name", length=60)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="cnpj", length=14)
    public String getCnpj() {
        return this.cnpj;
    }
    
    public void setCnpj(String cnpj) {
        this.cnpj = cnpj;
    }

    
    @Column(name="address", length=60)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="numberaddress", length=10)
    public String getNumberaddress() {
        return this.numberaddress;
    }
    
    public void setNumberaddress(String numberaddress) {
        this.numberaddress = numberaddress;
    }

    
    @Column(name="complement", length=40)
    public String getComplement() {
        return this.complement;
    }
    
    public void setComplement(String complement) {
        this.complement = complement;
    }

    
    @Column(name="district", length=60)
    public String getDistrict() {
        return this.district;
    }
    
    public void setDistrict(String district) {
        this.district = district;
    }

    
    @Column(name="city", length=60)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="uf", length=2)
    public String getUf() {
        return this.uf;
    }
    
    public void setUf(String uf) {
        this.uf = uf;
    }

    
    @Column(name="zipcode", length=8)
    public String getZipcode() {
        return this.zipcode;
    }
    
    public void setZipcode(String zipcode) {
        this.zipcode = zipcode;
    }

    
    @Column(name="available")
    public Boolean getAvailable() {
        return this.available;
    }
    
    public void setAvailable(Boolean available) {
        this.available = available;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Itemcompany> getItemcompanies() {
        return this.itemcompanies;
    }
    
    public void setItemcompanies(Set<Itemcompany> itemcompanies) {
        this.itemcompanies = itemcompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Guestcheck> getGuestchecks() {
        return this.guestchecks;
    }
    
    public void setGuestchecks(Set<Guestcheck> guestchecks) {
        this.guestchecks = guestchecks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Productcompany> getProductcompanies() {
        return this.productcompanies;
    }
    
    public void setProductcompanies(Set<Productcompany> productcompanies) {
        this.productcompanies = productcompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Itemlog> getItemlogs() {
        return this.itemlogs;
    }
    
    public void setItemlogs(Set<Itemlog> itemlogs) {
        this.itemlogs = itemlogs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Tablelist> getTablelists() {
        return this.tablelists;
    }
    
    public void setTablelists(Set<Tablelist> tablelists) {
        this.tablelists = tablelists;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Userlog> getUserlogs() {
        return this.userlogs;
    }
    
    public void setUserlogs(Set<Userlog> userlogs) {
        this.userlogs = userlogs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Usercompany> getUsercompanies() {
        return this.usercompanies;
    }
    
    public void setUsercompanies(Set<Usercompany> usercompanies) {
        this.usercompanies = usercompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Request> getRequests() {
        return this.requests;
    }
    
    public void setRequests(Set<Request> requests) {
        this.requests = requests;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
    public Set<Additionalcompany> getAdditionalcompanies() {
        return this.additionalcompanies;
    }
    
    public void setAdditionalcompanies(Set<Additionalcompany> additionalcompanies) {
        this.additionalcompanies = additionalcompanies;
    }




}


