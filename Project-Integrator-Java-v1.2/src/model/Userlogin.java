package model;
// Generated 15/05/2019 21:27:16 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Userlogin generated by hbm2java
 */
@Entity
@Table(name="userlogin"
    ,schema="gcsystem"
)
public class Userlogin  implements java.io.Serializable {


     private int code;
     private String name;
     private String login;
     private String password;
     private Boolean available;
     private Set<Usercompany> usercompanies = new HashSet<Usercompany>(0);
     private Set<Itemlog> itemlogs = new HashSet<Itemlog>(0);
     private Set<Filterhistory> filterhistories = new HashSet<Filterhistory>(0);
     private Set<Userlog> userlogs = new HashSet<Userlog>(0);
     private Set<Requestpay> requestpays = new HashSet<Requestpay>(0);
     private Userpermission userpermission;
     private Set<Request> requests = new HashSet<Request>(0);

    public Userlogin() {
    }

	
    public Userlogin(int code) {
        this.code = code;
    }
    public Userlogin(int code, String name, String login, String password, Boolean available, Set<Usercompany> usercompanies, Set<Itemlog> itemlogs, Set<Filterhistory> filterhistories, Set<Userlog> userlogs, Set<Requestpay> requestpays, Userpermission userpermission, Set<Request> requests) {
       this.code = code;
       this.name = name;
       this.login = login;
       this.password = password;
       this.available = available;
       this.usercompanies = usercompanies;
       this.itemlogs = itemlogs;
       this.filterhistories = filterhistories;
       this.userlogs = userlogs;
       this.requestpays = requestpays;
       this.userpermission = userpermission;
       this.requests = requests;
    }
   
     @Id 

    
    @Column(name="code", unique=true, nullable=false)
    public int getCode() {
        return this.code;
    }
    
    public void setCode(int code) {
        this.code = code;
    }

    
    @Column(name="name", length=60)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="login", length=20)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    @Column(name="password", length=100)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="available")
    public Boolean getAvailable() {
        return this.available;
    }
    
    public void setAvailable(Boolean available) {
        this.available = available;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Usercompany> getUsercompanies() {
        return this.usercompanies;
    }
    
    public void setUsercompanies(Set<Usercompany> usercompanies) {
        this.usercompanies = usercompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Itemlog> getItemlogs() {
        return this.itemlogs;
    }
    
    public void setItemlogs(Set<Itemlog> itemlogs) {
        this.itemlogs = itemlogs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Filterhistory> getFilterhistories() {
        return this.filterhistories;
    }
    
    public void setFilterhistories(Set<Filterhistory> filterhistories) {
        this.filterhistories = filterhistories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Userlog> getUserlogs() {
        return this.userlogs;
    }
    
    public void setUserlogs(Set<Userlog> userlogs) {
        this.userlogs = userlogs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Requestpay> getRequestpays() {
        return this.requestpays;
    }
    
    public void setRequestpays(Set<Requestpay> requestpays) {
        this.requestpays = requestpays;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Userpermission getUserpermission() {
        return this.userpermission;
    }
    
    public void setUserpermission(Userpermission userpermission) {
        this.userpermission = userpermission;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userlogin")
    public Set<Request> getRequests() {
        return this.requests;
    }
    
    public void setRequests(Set<Request> requests) {
        this.requests = requests;
    }




}


