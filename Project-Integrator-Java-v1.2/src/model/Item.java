package model;
// Generated 25/04/2019 00:40:20 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "item", schema = "gcsystem")
public class Item implements java.io.Serializable {

    private int code;
    private Category category;
    private String description;
    private BigDecimal price;
    private String preparation;
    private String additional;
    private String active;
    private Set<Additionalitem> additionalitems = new HashSet<Additionalitem>(0);
    private Set<Requestitem> requestitems = new HashSet<Requestitem>(0);
    private Set<Comboitem> comboitemsForCodeItem = new HashSet<Comboitem>(0);
    private Set<Comboitem> comboitemsForCodeComboitem = new HashSet<Comboitem>(0);

    public Item() {
    }

    public Item(int code, Category category) {
        this.code = code;
        this.category = category;
    }

    public Item(int code, Category category, String description, BigDecimal price, String preparation, String additional, String active, Set<Additionalitem> additionalitems, Set<Requestitem> requestitems, Set<Comboitem> comboitemsForCodeItem, Set<Comboitem> comboitemsForCodeComboitem) {
        this.code = code;
        this.category = category;
        this.description = description;
        this.price = price;
        this.preparation = preparation;
        this.additional = additional;
        this.active = active;
        this.additionalitems = additionalitems;
        this.requestitems = requestitems;
        this.comboitemsForCodeItem = comboitemsForCodeItem;
        this.comboitemsForCodeComboitem = comboitemsForCodeComboitem;
    }

    @Id

    @Column(name = "code", nullable = false)
    public int getCode() {
        return this.code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "code_category", nullable = false)
    public Category getCategory() {
        return this.category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    @Column(name = "description", length = 40)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "price", precision = 6)
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @Column(name = "preparation", length = 10)
    public String getPreparation() {
        return this.preparation;
    }

    public void setPreparation(String preparation) {
        this.preparation = preparation;
    }

    @Column(name = "additional", length = 3)
    public String getAdditional() {
        return this.additional;
    }

    public void setAdditional(String additional) {
        this.additional = additional;
    }

    @Column(name = "active", length = 3)
    public String getActive() {
        return this.active;
    }

    public void setActive(String active) {
        this.active = active;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
    public Set<Additionalitem> getAdditionalitems() {
        return this.additionalitems;
    }

    public void setAdditionalitems(Set<Additionalitem> additionalitems) {
        this.additionalitems = additionalitems;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
    public Set<Requestitem> getRequestitems() {
        return this.requestitems;
    }

    public void setRequestitems(Set<Requestitem> requestitems) {
        this.requestitems = requestitems;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "itemByCodeItem")
    public Set<Comboitem> getComboitemsForCodeItem() {
        return this.comboitemsForCodeItem;
    }

    public void setComboitemsForCodeItem(Set<Comboitem> comboitemsForCodeItem) {
        this.comboitemsForCodeItem = comboitemsForCodeItem;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "itemByCodeComboitem")
    public Set<Comboitem> getComboitemsForCodeComboitem() {
        return this.comboitemsForCodeComboitem;
    }

    public void setComboitemsForCodeComboitem(Set<Comboitem> comboitemsForCodeComboitem) {
        this.comboitemsForCodeComboitem = comboitemsForCodeComboitem;
    }

}
