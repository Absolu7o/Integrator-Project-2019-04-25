package model;
// Generated 15/05/2019 21:27:16 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,schema="gcsystem"
)
public class Product  implements java.io.Serializable {


     private int code;
     private Productcategory productcategory;
     private String barcode;
     private Integer productseq;
     private String description;
     private BigDecimal price;
     private String preparation;
     private Boolean additional;
     private Date datetimeins;
     private Set<Productcompany> productcompanies = new HashSet<Productcompany>(0);
     private Set<Requestproduct> requestproducts = new HashSet<Requestproduct>(0);
     private Set<Comboproduct> comboproductsForCodeProduct = new HashSet<Comboproduct>(0);
     private Set<Comboproduct> comboproductsForCodeComboproduct = new HashSet<Comboproduct>(0);
     private Set<Productadditional> productadditionals = new HashSet<Productadditional>(0);

    public Product() {
    }

	
    public Product(int code) {
        this.code = code;
    }
    public Product(int code, Productcategory productcategory, String barcode, Integer productseq, String description, BigDecimal price, String preparation, Boolean additional, Date datetimeins, Set<Productcompany> productcompanies, Set<Requestproduct> requestproducts, Set<Comboproduct> comboproductsForCodeProduct, Set<Comboproduct> comboproductsForCodeComboproduct, Set<Productadditional> productadditionals) {
       this.code = code;
       this.productcategory = productcategory;
       this.barcode = barcode;
       this.productseq = productseq;
       this.description = description;
       this.price = price;
       this.preparation = preparation;
       this.additional = additional;
       this.datetimeins = datetimeins;
       this.productcompanies = productcompanies;
       this.requestproducts = requestproducts;
       this.comboproductsForCodeProduct = comboproductsForCodeProduct;
       this.comboproductsForCodeComboproduct = comboproductsForCodeComboproduct;
       this.productadditionals = productadditionals;
    }
   
     @Id 

    
    @Column(name="code", unique=true, nullable=false)
    public int getCode() {
        return this.code;
    }
    
    public void setCode(int code) {
        this.code = code;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="code_productcategory")
    public Productcategory getProductcategory() {
        return this.productcategory;
    }
    
    public void setProductcategory(Productcategory productcategory) {
        this.productcategory = productcategory;
    }

    
    @Column(name="barcode", length=9)
    public String getBarcode() {
        return this.barcode;
    }
    
    public void setBarcode(String barcode) {
        this.barcode = barcode;
    }

    
    @Column(name="productseq")
    public Integer getProductseq() {
        return this.productseq;
    }
    
    public void setProductseq(Integer productseq) {
        this.productseq = productseq;
    }

    
    @Column(name="description", length=40)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="price", precision=12)
    public BigDecimal getPrice() {
        return this.price;
    }
    
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    
    @Column(name="preparation", length=20)
    public String getPreparation() {
        return this.preparation;
    }
    
    public void setPreparation(String preparation) {
        this.preparation = preparation;
    }

    
    @Column(name="additional")
    public Boolean getAdditional() {
        return this.additional;
    }
    
    public void setAdditional(Boolean additional) {
        this.additional = additional;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="datetimeins", length=29)
    public Date getDatetimeins() {
        return this.datetimeins;
    }
    
    public void setDatetimeins(Date datetimeins) {
        this.datetimeins = datetimeins;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Productcompany> getProductcompanies() {
        return this.productcompanies;
    }
    
    public void setProductcompanies(Set<Productcompany> productcompanies) {
        this.productcompanies = productcompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Requestproduct> getRequestproducts() {
        return this.requestproducts;
    }
    
    public void setRequestproducts(Set<Requestproduct> requestproducts) {
        this.requestproducts = requestproducts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="productByCodeProduct")
    public Set<Comboproduct> getComboproductsForCodeProduct() {
        return this.comboproductsForCodeProduct;
    }
    
    public void setComboproductsForCodeProduct(Set<Comboproduct> comboproductsForCodeProduct) {
        this.comboproductsForCodeProduct = comboproductsForCodeProduct;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="productByCodeComboproduct")
    public Set<Comboproduct> getComboproductsForCodeComboproduct() {
        return this.comboproductsForCodeComboproduct;
    }
    
    public void setComboproductsForCodeComboproduct(Set<Comboproduct> comboproductsForCodeComboproduct) {
        this.comboproductsForCodeComboproduct = comboproductsForCodeComboproduct;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Productadditional> getProductadditionals() {
        return this.productadditionals;
    }
    
    public void setProductadditionals(Set<Productadditional> productadditionals) {
        this.productadditionals = productadditionals;
    }




}


